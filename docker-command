docker run -d --net=cluster --name=management1 --ip=192.168.0.2 -v /opt/mysql-cluster/mysql-cluster.cnf:/etc/mysql-cluster.cnf mysql/mysql-cluster ndb_mgmd

docker run -d --net=cluster --name=ndb1 --ip=192.168.0.3 -v /opt/mysql-cluster/my.cnf:/etc/my.cnf --mount type=bind,source=/opt/mysql-cluster/data,destination=/var/lib/mysql mysql/mysql-cluster ndbd

docker run -d --net=cluster --name=ndb2 --ip=192.168.0.4 -v /opt/mysql-cluster/my.cnf:/etc/my.cnf --mount type=bind,source=/opt/mysql-cluster/data,destination=/var/lib/mysql mysql/mysql-cluster ndbd

docker run -d --net=cluster --name=ndb3 --ip=192.168.0.5 -v /opt/mysql-cluster/my.cnf:/etc/my.cnf --mount type=bind,source=/opt/mysql-cluster/data,destination=/var/lib/mysql mysql/mysql-cluster ndbd

docker run -d --net=cluster --name=mysql1 --ip=192.168.0.10 -e MYSQL_RANDOM_ROOT_PASSWORD=true -v /opt/mysql-cluster/my.cnf:/etc/my.cnf --mount type=bind,source=/opt/mysql-cluster/datamm,destination=/var/lib/mysql -p 4306:3306 mysql/mysql-cluster mysqld --default-authentication-plugin=mysql_native_password

docker run -d --net=cluster --name=mysql2 --ip=192.168.0.11 -e MYSQL_RANDOM_ROOT_PASSWORD=true -v /opt/mysql-cluster/my.cnf:/etc/my.cnf --mount type=bind,source=/opt/mysql-cluster/datamm,destination=/var/lib/mysql -p 4307:3306 mysql/mysql-cluster mysqld --default-authentication-plugin=mysql_native_password

docker logs mysql1 2>&1 | grep PASSWORD
docker exec -it mysql1 mysql -uroot -p
ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass';

Finally start a container with an interactive management client to verify that the cluster is up
docker run -it --net=cluster mysql/mysql-cluster ndb_mgm

#Test Connect client
mysql -h 127.0.0.1 --port=4306 -uroot -pMyNewPass
